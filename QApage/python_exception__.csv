Error,설명,예제,,
AssertionError,"assert 문이 실패할 때 발생하는 에러입니다. assert문은 주어진 조건이 거짓인 경우 에러를 일으키는 함수이며, if 조건문과 같이 동작합니다. assert 함수는 주로 프로그램 점검을 할 때 이용됩니다.",">>> x = 999
>>> assert x != 999, 'x의 값이 예상과 다릅니다'

AssertionError: x의 값이 예상과 다릅니다",,
AttributeError,"대상이 지원하지 않는 함수를 사용하려 할 때 발생하는 에러입니다. 
다음 사항을 확인해 보세요.
(1) 함수 혹은 인스턴스에 오타가 있는지 확인 해보세요
(2) 함수의 속성을 확인해보세요 (ex. 문자열을 대상으로 하는 함수에 숫자를 사용하는 경우)
(3) 모듈명과 파일명이 같은지 확인해보세요",">>> x = 9989
>>> x.split(8)

AttributeError: 'int' object has no attribute 'split'",,
EOFError,input() 함수가 데이터를 읽지 못한 상태에서 EOF (end-of-file) 조건을 만날 때 발생합니다. (주의하세요: io.IOBase.read() 와 io.IOBase.readline() 메서드는 EOF를 만날 때 빈 문자열을 돌려줍니다.),,,
GeneratorExit,제너레이터 또는 코루틴 이 닫힐 때 발생합니다 generator.close() 와 coroutine.close() 를 확인해 보십시오.,,,
ImportError,"import 문이 모듈을 로드하는 데 문제가 있을 때 발생합니다. 또한 from ... import 에서 임포트 하려는 이름을 찾을 수 없을 때도 발생합니다.
(1) 모듈 명이 올바르게 쓰였는가
(2) 모듈이 환경에 설치되어 있는가
를 확인 해보시길 바랍니다.",,,
ModuleNotFoundError,"ImportError 의 서브 클래스인데, 모듈을 찾을 수 없을 때 import 가 일으킵니다. sys.modules 에서 None 이 발견될 때도 발생합니다.",,,
IndexError,"Index가 범위를 벗어날 때 발생합니다.
(Index가 정수가 아니면 Type error가 발생합니다.)",,,
KeyError,딕셔너리의 키가 기존 키 집합에서 발견되지 않거나 Value가 None 일 경우 발생합니다.,,,
KeyboardInterrupt,"사용자가 인터럽트 키(일반적으로 Control-C 또는 Delete)를 누를 때 발생합니다. 실행 중에 인터럽트 검사가 정기적으로 수행됩니다. Exception을 잡는 코드에 의해 우연히 잡혀서, 인터프리터가 종료하는 것을 막지 못하도록 BaseException 를 계승합니다.",,,
MemoryError,"프로그램이 더 이상 충분한 메모리를 할당할 수 없을 때 발생하는 에러입니다.
(1) 프로그램에서 자료의 크기(or 단위)가 너무 크진 않은지
(2) 외부 리소스가 메모리를 과다 사용을 하지 않는지
확인 해보시길 권장드립니다.",,,
NameError,"지역/전역 이름(변수)를 찾을 수 없을 때 발생합니다.
이는 정규화되지 않은 이름에만 적용됩니다.
연관된 값은 찾을 수 없는 이름을 포함하는 에러 메시지입니다.
(1) 변수를 선언한 곳을 찾아보고 해당 변수의 이름을 확인해보세요.
(2) (1)항목에 이상이 없다면 해당 변수의 이름에 오타는 없는지 확인해보세요.",,,
UnboundLocalError,"함수 나 메서드에서 지역 변수를 참조하지만, 해당 변수에 값이 연결되지 않으면 발생합니다. 이것은 NameError 의 서브 클래스입니다.",,,
RuntimeError,"다른 범주에 속하지 않는 에러가 감지될 때 발생합니다. 
주로 일반적인 예외를 처리하기 위해 사용됩니다. (except 문)
연관된 값은 정확히 무엇이 잘못되었는지를 나타내는 문자열입니다.",,,
NotImplementedError,이 예외는 RuntimeError에서 파생됩니다. 코드에서 반드시 작성 되어야 하는 메서드나 추가적으로 구현이 필요한 부분이 작성되지 않았을 때 이 예외를 발생시킵니다.,,,
RecursionError,"이 예외는 RuntimeError 에서 파생됩니다. 인터프리터가 최대 재귀 깊이가 초과하였음을 감지할 때 발생합니다.

재귀호출 : 함수가 자기 자신을 호출하는 것을 의미합니다.
sys.getrecursionlimit() : 파이썬 인터프리터의 재귀 깊이의 한계를 알려줍니다.",,,
OSError([arg]),"OSError 예외는 다양한 생성자 인자를 통해 생성될 수 있습니다.

생성자 인자란? : 객체를 생성할 때 클래스의 인스턴스 변수를 초기화하기 위해 전달되는 값입니다.

errno: 오류 번호로, 일반적으로 운영 체제에서 제공하는 오류 코드입니다. 이는 특정한 오류를 식별하는 데 사용됩니다.
strerror: 오류에 대한 설명을 나타내는 문자열입니다.
filename: 발생한 오류와 연관된 파일의 이름입니다. 이는 선택적 인자로 사용됩니다.
winerror: Windows 운영 체제에서 사용되는 오류 번호입니다. 이는 선택적 인자로 사용됩니다.
filename2: 두 번째 파일 이름으로, 연관된 오류에 대한 더 많은 정보를 제공할 때 사용됩니다. 이는 선택적 인자로 사용됩니다.",,,
OverflowError,"산술 연산의 결과가 너무 커서 표현할 수 없을 때 발생합니다. 정수에서는 발생하지 않습니다 (포기하기보다는 MemoryError 를 일으키게 될 겁니다). 그러나, 역사적인 이유로, 때로 OverflowError는 요구되는 범위를 벗어난 정수의 경우도 발생합니다. C에서 부동 소수점 예외 처리의 표준화가 부족하므로, 대부분의 부동 소수점 연산은 검사되지 않습니다.",,,
ReferenceError,이 예외는 weakref.proxy() 함수가 만든 약한 참조 프락시가 이미 가비지 수집된 참조 대상의 어트리뷰트를 액세스하는 데 사용될 때 발생합니다. 약한 참조에 대한 더 자세한 정보는 weakref 모듈을 보십시오.,,,
StopIteration,"이터레이터에 의해 생성된 항목이 더 이상 없다는 것을 알려주기 위해, 내장 함수 next()와 이터레이터의 __next__() 메서드가 일으킵니다.

이터레이터 : next()함수 호출 시 계속 그 다음 값을 반환하는 객체 
ex. iter([1,2,3])",,,
StopAsyncIteration,"비동기 이터레이터에 의해 생성된 항목이 더 이상 없다는 것을 알려주기 위해, 내장 함수 anext()와 이터레이터의 __anext__() 메서드가 일으킵니다.

비동기 이터레이터(Async Iterator) : 이터레이터와 다르게 비동기적으로 값을 생성하고 소비합니다.",,,
SyntaxError,"파이썬 언어의 규칙과 문법에 맞지 않을 때 발생합니다.
아래의 경우를 참고하세요.

1. import문 : 잘못된 모듈 이름이나 구문으로 인해 발생합니다.
2. compile : compile(), exec(), eval() 과 같은 함수를 사용하여 동적으로 생성된 코드를 실행할 때, 컴파일 중에 구문 오류가 있으면 발생합니다.
3. 스크립트 파일이나 표준 입력(대화식 인터프리터를 사용할 때)에서 구문 오류가 있을 때 발생합니다.",,,
IndentationError,잘못된 들여쓰기와 관련된 문법 오류의 베이스 클래스입니다. SyntaxError 의 서브 클래스입니다.,,,
TabError,들여쓰기가 일관성없는 탭과 스페이스 사용을 포함하는 경우 발생합니다. IndentationError 의 서브 클래스입니다.,,,
SystemError,"인터프리터가 내부 에러를 발견했지만, 모든 희망을 포기할 만큼 상황이 심각해 보이지는 않을 때 발생합니다. 연관된 값은 무엇이 잘못되었는지 (저수준의 용어로) 나타내는 문자열입니다. 파이썬 버전이나 메모리, 하드웨어에 문제가 없는 지 확인해보세요.",,,
SystemExit,"이 예외는 sys.exit() 함수가 일으킵니다. Exception을 잡는 코드에 의해 우연히 잡히지 않도록, Exception 대신에 BaseException 을 상속합니다. 이렇게 하면 예외가 올바르게 전파되어 인터프리터가 종료됩니다. 처리되지 않으면, 파이썬 인터프리터가 종료됩니다; 스택 트레이스백은 인쇄되지 않습니다. 생성자는 sys.exit() 에 전달된 것과 같은 선택적 인자를 받아들입니다. 값이 정수이면 시스템 종료 상태를 지정합니다 (C의 exit() 함수에 전달됩니다); None 이면 종료 상태는 0입니다; 다른 형(가령 문자열)이면 객체의 값이 인쇄되고 종료 상태는 1입니다.",,,
TypeError,연산이나 함수가 부적절한 형의 객체에 적용될 때 발생합니다. 연관된 값은 형 불일치에 대한 세부 정보를 제공하는 문자열입니다.,,,
ValueError,"연산이나 함수가 올바른 형이지만 부적절한 값을 가진 인자를 받았고, 상황이 IndexError 처럼 더 구체적인 예외로 설명되지 않는 경우 발생합니다.",,,
UnicodeError,유니코드 관련 인코딩 또는 디코딩 에러가 일어날 때 발생합니다. ValueError 의 서브 클래스입니다.,,,
UnicodeEncodeError,인코딩 중에 유니코드 관련 에러가 일어나면 발생합니다. UnicodeError 의 서브 클래스입니다.,,,
UnicodeDecodeError,디코딩 중에 유니코드 관련 에러가 일어나면 발생합니다. UnicodeError 의 서브 클래스입니다.,,,
UnicodeTranslateError,번역 중에 유니코드 관련 에러가 일어나면 발생합니다. UnicodeError 의 서브 클래스입니다.,,,
ZeroDivisionError,나누기 또는 모듈로 연산의 두 번째 인자가 0일 때 발생합니다. 연관된 값은 피연산자의 형과 연산을 나타내는 문자열입니다.,,,
abs(x),"숫자의 절댓값을 돌려줍니다. 인자는 정수, 실수 또는 __abs__()를 구현하는 객체입니다. 인자가 복소수면 그 크기가 반환됩니다.",,,
aiter(async_iterable),비동기 이터러블(async iterable) 객체를 받아 비동기 이터레이터(async iterator)를 반환하는 함수입니다.,,,
awaitable anext(async_iterator),"비동기 이터레이터에서 다음 값을 가져오는 함수입니다. 다음 값을 가지고 있지 않다면 'StopAsyncIteration'예외가 발생하며 awaitable anext(async_iterator, default) 일 경우에는 'default'값을 반환합니다.",,,
all(iterable),"주어진 이터러블의 모든 요소가 참인지 확인하는 함수입니다.
모든 요소가 참이면 True 를 그렇지 않다면 False 를 반환합니다.",,,
any(iterable),"주어진 이터러블에서 하나 이상의 요소가 참인지 확인하는 함수입니다.
하나 이상의 요소가 참이면 True 를 모든 요소가 거짓인 경우엔 False 를 반환합니다.",,,
ascii(object),"객체를 ASCII로 반환할 수 있는 문자열로 반환해줍니다.
repr()도 객체의 문자열 표현을 반환하는데 사용되지만 non-ASCII 문자를 표현하는 방법이 다릅니다.
ascii()는 이스케이프(\)를 사용하여 변환 후 나타내지만, repr()은 문자를 있는 그대로 표현합니다.

Ex) text = ""H?llo, W?rld!""
print(ascii(text))  # 'H\xe9llo, W\xf6rld!'
print(repr(text))  # 'H?llo, W?rld!'",,,
bin(x),"정수를 ""0b""가 앞에 붙은 이진 문자열로 반환합니다.
""0b""는 이진 표현임을 나타내는 접두사입니다.",,,
class bool(x=False),"bool' 클래스는 주어진 인자 'x'를 기반으로 불리언(boolean)값을 생성합니다.
'bool' 클래스는 참(True)와 거짓(False)를 표현하는 자료형입니다. 
x가 False 이거나 생략되면 False 를 반환하고 그렇지 않다면 True 를 반환합니다.
Bool 클래스는 int의 하위 클래스입니다.",,,
"breakpoint(*args, **kws)","breakpoint()함수는 디버깅을 위해 사용되는 Python 내장 함수입니다.
breakpoint()함수를 호출하면 현재 실행 중인 코드의 실행을 일시적으로 멈추고 디버깅 모드로 전환됩니다.
호출된 위치에서 디버깅을 시작하며, 호출된 위치의 코드 라인에서 실행이 멈춥니다.
*args와 **kws는 선택적인 인자로서 디버거에 전달될 수 있는 추가적인 인자입니다.",,,
class bytearray(source=b''),"변경 가능한 바이트 배열을 나타내는 자료형입니다.
기본값은 빈 바이트 배열 (b'')이며 선택적 인자 'source' 를 통해 바이트 배열을 기본값을 수정할 수 있습니다.
변경 가능하기 때문에 extend, append 등의 메서드를 통해 조작 및 수정이 가능합니다.",,,
class bytes(source=b''),"변경 불가능한 바이트 배열을 나타내는 자료형입니다.
기본값은 빈 바이트 배열 (b'')이며 선택적 인자 'source' 를 통해 바이트 배열을 기본값을 수정할 수 있습니다.
변경 가능하기 때문에 extend, append 등의 메서드를 통해 조작 및 수정이 불가능합니다.
다만, 인덱싱과 슬라이싱을 통해 일부를 추출 및 조작할 수 있습니다.",,,
callable(object),"객체가 호출이 가능한지에 대한 여부를 확인하는 데 사용됩니다.
호출이 가능하다면 True, 아니라면 False 를 반환합니다.",,,
chr(i),"유니코드 코드 포인트가 정수 i 인 문자를 나타내는 문자열을 돌려줍니다. 예를 들어, chr(97) 은 문자열 'a' 를 돌려주고, chr(8364) 는 문자열 '€' 를 돌려줍니다. 이 것은 ord() 의 반대입니다.",,,
ord(c),"하나의 유니코드 문자를 나타내는 문자열이 주어지면 해당 문자의 유니코드 코드 포인트를 나타내는 정수를 돌려줍니다. 예를 들어, ord('a') 는 정수 97 을 반환하고 ord('€') (유로 기호)는 8364 를 반환합니다. 이것은 chr() 의 반대입니다.",,,
@classmethod,메서드를 클래스 메서드로 변환합니다.,,,
"compile(source, filename, mode, flags=0, dont_inherit=False, optimize=- 1)","compile() 함수는 문자열 형태의 소스 코드를 컴파일하여 코드 객체를 생성하는 함수입니다.
",,,
"class complex(real=0, imag=0)","파이썬 내장 클래스로, 복소수를 나타내는 클래스입니다.
인자를 전달하지 않을 경우 0+0j 인 복소수를 생성합니다.",,,
"delattr(object, name)","객체의 속성을 삭제하는 함수입니다.
'object'는 삭제 할 객체의 이름을 나타내고 'name'은 삭제할 속성의 이름을 나타냅니다.",,,
class dict(**kwarg),"파이썬 내장 클래스로, 사전(dictionary)를 나타내는 클래스입니다.
사전은 키(Key)와 값(Value)의 쌍으로 이루어진 데이터 구조입니다.",,,
dir(),dir()은 python 내장 함수로서 객체의 속성(사용할 수 있는 방법)을 알려줍니다.,,,
"divmod(a, b)",두 개의 숫자를 인자로 받아서 나눈 몫과 나머지를 반환하는 함수입니다.,,,
"enumerate(iterable, start=0)",이터러블 객체를 받아서 각 요소와 해당 요소의 인덱스를 포함하는 이터레이터를 반환합니다. start 매개변수는 인덱스 시작 위치를 결정해주며 기본 값은 0 입니다.,,,
"eval(expression, globals=None, locals=None)","문자열로 표현된 파이썬 코드식을 실행하여 결과를 반환하는 함수입니다.

Expression은 실행할 파이썬 코드를 나타내는 문자열이며 globals, locals는 전역 및 지역 이름 공간을 지정하는 딕셔너리입니다.",,,
"exec(object, globals=None, locals=None, /, *, closure=None)","문자열로 표현된 파이썬 코드식을 실행하는 함수입니다.

object은 실행할 파이썬 코드를 나타내는 문자열이며 globals, locals는 전역 및 지역 이름 공간을 지정하는 딕셔너리입니다.",,,
"filter(function, iterable)",주어진 함수(function)를 이용하여 반복 가능한 객체('iterable')의 요소를 필터링하는 역할을 합니다. 'function'은 필터링을 적용할 조건을 정의하는 함수입니다. 이 함수는 각 요소를 인자로 받아서 True 혹은 False로 반환해야합니다.,,,
class float(x=0.0),숫자 또는 문자열 x 로 부터 실수를 만들어 돌려줍니다.,,,
"format(value, format_spec='')","주어진 값을 지정된 형식에 맞게 포맷팅하여 문자열로 반환하는 함수입니다.
매개변수 'value'를 포맷팅할 값을 받고, 'format_spec'으로 포맷 지정자를 받습니다.
포맷 지정자는 값의 출력 형식을 지정하는 문자열입니다. (ex. "".2f"")",,,
class frozenset(iterable=set()),"변경할 수 없는 집합을 생성하는 클래스입니다.
집합(set)과 유사하지만, 집합의 요소를 추가, 제거, 수정 할 수 없지만 집합에 대한 연산 및 속성을 지원합니다.",,,
"getattr(object, name)","주어진 객체(object)에서 지정된 속성(name)을 가져오는 함수입니다.
만약 객체에 해당 속성이 존재하지 않으면, 기본값인 'None'을 반환합니다.",,,
globals(),현재 모듈에서 사용되고 있는 전역 변수의 이름과 값으로 이루어진 사전(dictionary)를 반환합니다.,,,
"hasattr(object, name)","객체(object)가 속성(name)을 가지고 있는지 여부를 확인하는 함수입니다.
해당 속성을 지니고 있다면 True 아니라면 False 를 반환합니다.",,,
hash(object),객체의 해시값을 돌려줍니다 (해시가 있는 경우). 해시값은 정수다. 딕셔너리 조회 중에 딕셔너리 키를 빨리 비교하는 데 사용됩니다. 같다고 비교되는 숫자 값은 같은 해시값을 갖습니다 (1과 1.0의 경우와 같이 형이 다른 경우조차도 그렇습니다).,,,
help(),"help()는 파이썬 내장 함수로서 해당 인자의 사용 방법, 속성, 설명 등에 대한 정보를 확인할 수 있습니다.",,,
hex(x),"hex(x) 함수는 정수 x의 16진수 표현을 반환하는 함수입니다. 반환되는 문자열은 ""0x"" 접두사와 함께 16진수로 표현된 값이 포함됩니다.

x는 10진수로 표현된 정수이어야 합니다. 반환되는 16진수 문자열은 해당 정수의 16진수 표현을 나타내며, 각 자리는 0부터 9까지의 숫자와 A부터 F까지의 대문자로 표현됩니다.",,,
id(object),"객체의 고유한 식별자(identity)를 반환하는 함수입니다.
식별자는 객체가 메모리 상에서 위치하는 고유한 주소값을 나타내며, 객체가 생성될 때마다 변경되지 않습니다.",,,
input(),사용자로부터 텍스트를 입력받는 함수입니다.,,,
class int(x=0),숫자 또는 문자열 x 로 부터 정수를 만들어 돌려줍니다.,,,
"isinstance(object, classinfo)",주어진 객체(object)가 특정 클래스(classinfo)의 인스턴스인지 확인하는 함수입니다. True 혹은 False 가 반환됩니다.,,,
"issubclass(class, classinfo)",주어진 클래스(class)가 특정 클래스(classinfo)의 하위 클래스인지를 확인하는 함수입니다. True 혹은 False가 반환됩니다.,,,
iter(object),"반복 가능한 객체('object')의 반복자를 반환하는 함수입니다.
반복 가능한 객체란 '__iter__()' 메서드를 구현하거나, 시퀀스(list, tuple, string)이나 컬렉션(set, dictinary)과 같이 순회 가능한 객체를 말합니다.",,,
len(s),"객체의 길이 (항목 수)를 돌려줍니다. 인자는 시퀀스 (문자열, 바이트열, 튜플, 리스트 또는 range 같은) 또는 컬렉션 (딕셔너리, 집합 또는 불변 집합 같은) 일 수 있습니다.",,,
class list,"list' 는 파이썬의 내장 클래스 중 하나로 수정 가능한 시퀀스 자료형을 나타냅니다. 리스트는 대괄호([])로 요소들을 감싸고, 각 요소는 쉼표(,) 로 구분합니다.",,,
locals(),"현재 지역 심볼 테이블을 나타내는 딕셔너리를 갱신하고 돌려줍니다. locals() 이 함수 블록에서 호출될 때 자유 변수를 돌려주지만, 클래스 블록에서 호출할 때는 그렇지 않습니다. 모듈 수준에서 locals()와 globals()는 같은 딕셔너리임에 유의하십시오.",,,
"map(function, iterable, *iterables)",주어진 함수(function)를 반복 가능한 객체(iterable)의 각 요소에 적용하여 새로운 이터레이터(iterator)를 생성하는 함수입니다.,,,
"max(iterable, *, key=None)",주어진 객체(iterable)의 요소 중에서 가장 큰 값을 반환하는 함수입니다.,,,
class memoryview(object),"지정된 인자로부터 만들어진 “메모리 뷰” 객체를 돌려줍니다.
'메모리 뷰'는 객체가 처리하는 원자 메로리 단위입니다.",,,
"min(iterable, *, key=None)",주어진 객체(iterable)의 요소 중에서 가장 작은 값을 반환하는 함수입니다.,,,
next(iterator),이터레이터에서 다음 요소를 반환합니다.,,,
class object,파이썬 내장 함수입니다. 특징이 없는 새로운 객체를 반환합니다. object는 모든 클래스의 기반입니다.,,,
oct(x),"oct(x) 함수는 정수 x의 8진수 표현을 반환하는 함수입니다. 반환되는 문자열은 ""0o"" 접두사와 함께 8진수로 표현된 값이 포함됩니다.

x는 10진수로 표현된 정수이어야 합니다. 반환되는 8진수 문자열은 해당 정수의 8진수 표현을 나타냅니다.",,,
"open(file, mode='r', buffering=- 1, encoding=None, errors=None, newline=None, closefd=True, opener=None)","open() 함수는 파일을 열고 파일 객체를 반환합니다. 이 함수는 다양한 모드로 파일을 열 수 있으며, 파일을 읽기, 쓰기, 추가하기 등 다양한 작업을 수행할 수 있도록 지원합니다.",,,
"pow(base, exp, mod=None)","pow() 함수는 주어진 'base' 값에 대해 'exp' 거듭 제곱을 계싼하여 반환합니다.
선택적으로 mod 값을 제공하여 계산된 결과를 mod로 나눈 나머지를 반환할 수 있습니다.",,,
"print(*objects, sep=' ', end='\n', file=None, flush=False)","print() 함수는 하나 이상의 객체를 출력하는 데 사용되며, 기본적으로 표준 출력 장치에 출력합니다.",,,
"class property(fget=None, fset=None, fdel=None, doc=None)","속성을 정의하고 접근자 메서드(getter, setter, deleter)를 설정하는 데 사용됩니다.
1. getter 매서드(fget) : 속성에 접근할 때 호출되는 메서드입니다.
2. setter 메서드(fset) : 속성에 값을 할당할 때 호출되는 메서드입니다.
3. deleter 메서드(fdel) : 속성에 값을 제거할 때 호출되는 메서드입니다.",,,
class range(stop),"연속된 숫자 시퀀스를 나타내는 'range' 객체를 생성합니다.
Stop : 시퀀스의 끝을 나타내는 정수입니다.",,,
repr(object),"객체의 내부 상태를 나타내는 문자열을 생성하며, 해당 문자열을 사용하여 객체를 다시 생성할 수 있는 코드를 생성하는 것이 목적입니다.
Repr() 함수는 객체의 인쇄 가능한 표현을 포함하는 문자열을 반환합니다.",,,
reversed(seq),이터레이터를 역순으로 반환하는 내장 함수입니다.,,,
"round(number, ndigits=None)","number 를 소수점 다음에 ndigits 정밀도로 반올림한 값을 돌려줍니다. ndigits 가 생략되거나 None 이면, 입력에 가장 가까운 정수를 돌려줍니다.",,,
class set,"set은 변경 가능한(mutable) 집합을 나타내는 내장 클래스입니다. 집합은 중복되지 않는 요소들의 모임을 나타내며, 순서가 없습니다. set 클래스는 이러한 특성을 가지며, 다양한 집합 연산을 수행할 수 있습니다.",,,
"setattr(object, name, value)","객체의 속성에 값을 할당하는 내장 함수입니다.
주어진 객체 'object'의 속성 'name' 에 값을 설정하고자 할 때 사용합니다.",,,
class slice(stop),"슬라이싱 연산을 수행하기 위한 내장 클래스인 'slice' 객체를 생성합니다.
슬라이싱은 시퀀스 객체의 특정 범위의 요소들을 추출하는 연산을 말합니다.
start : 슬라이스의 시작 인덱스를 나타내는 정수
stop : 슬라이스의 끝 인덱스를 나타내는 정수
step : 슬라이스의 간격을 나타내는 정수",,,
"sorted(iterable, /, *, key=None, reverse=False)",주어진 객체(iterable)의 요소들을 정렬하여 새로운 리스트로 반환하는 내장함수입니다.,,,
@staticmethod,메서드를 정적 메서드로 변환합니다.,,,
class str(object=''),내장 클래스인 'str'의 생성자 입니다. 'str' 클래스는 문자열을 나타내는 객체를 생성하는 데 사용됩니다.,,,
"sum(iterable, /, start=0)",start 및 iterable 의 항목들을 왼쪽에서 오른쪽으로 합하고 합계를 돌려줍니다. iterable 의 항목은 일반적으로 숫자며 시작 값은 문자열이 될 수 없습니다.,,,
class super,"파이썬에서 상위 클래스(superclass)의 메서드를 호출할 때 사용하는 내장 함수입니다.
Super() 함수를 호출하면 현재 클래스의 상위 클래스에 대한 객체가 반환되며, 이를 통해 상위 클래스의 메서드를 호출할 수 있습니다.",,,
class tuple,"파이썬 내장 클래스로, 변경할 수 없는 시퀀스형 자료구조입니다. 
tuple은 여러 개의 값들을 순서대로 저장하며, 각 값은 인덱스를 통해 접근할 수 있습니다.",,,
class type(object),"파이썬의 내장 클래스로, 객체의 타입을 나타내는 클래스입니다.
'type' 클래스는 객체의 타입을 동적으로 생성 및 조작할 수 있는 기능이 있습니다.",,,
vars(),"객체의 속성들을 나타내는 딕셔너리를 반환하는 내장함수입니다.
함수에 인자를 전달하지 않으면, 현재 정의된 로컬 변수들의 딕셔너리를 반환합니다.
따라서 로컬 변수들을 조회하는 용도로 주로 사용됩니다.",,,
"zip(*iterables, strict=False)","여러 개의 이터러블(iterable) 객체를 병렬로 묶어주는 함수입니다.
각 이터러블 객체에서 같은 위치에 있는 요소들을 튜플로 묶어줍니다. 반환되는 객체는 이터레이터(iterator)로서 'next' 함수를 통해 순차적으로 튜플을 가져올 수 있습니다.",,,
"__import__(name, globals=None, locals=None, fromlist=(), level=0)","모듈을 동적으로 임포트하는 함수입니다. 이 함수는 내장 함수로, 주어진 모듈 이름을 사용하여 해당 모듈을 로드하고, 그 모듈을 나타내는 모듈 객체를 반환합니다.
일반적인 경우에는 'import' 문을 사용하여 모듈을 로드하는 것이 권장됩니다.

(import lib, import_module() 과 달리 일상적인 파이썬 프로그래밍에서는 필요하지 않은 고급 함수입니다.",,,
